// <auto-generated />
using System;
using DbContexts.DbContextTrendTraderPro;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbContexts.MigrationsTrendTraderPro.SqlServerMigrations
{
    [DbContext(typeof(TrendTraderProDbContext))]
    [Migration("20231223143118_Added_Track_Coin")]
    partial class Added_Track_Coin
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.CoinPriceHistories.CoinPriceHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CoinId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MarketCap")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 10)");

                    b.Property<decimal?>("TotalVolume")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("CoinId");

                    b.ToTable("CoinPriceHistories");
                });

            modelBuilder.Entity("Entities.Coins.Coin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coins");
                });

            modelBuilder.Entity("Entities.TrackCoins.TrackCoin", b =>
                {
                    b.Property<string>("CoinId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastRequestDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TrackStatus")
                        .HasColumnType("int");

                    b.HasKey("CoinId");

                    b.ToTable("TrackCoin");
                });

            modelBuilder.Entity("Entities.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@gmail.com",
                            Name = "admin",
                            Password = "admin",
                            Role = "Admin",
                            Tel = "05350449876"
                        });
                });

            modelBuilder.Entity("Entities.CoinPriceHistories.CoinPriceHistory", b =>
                {
                    b.HasOne("Entities.Coins.Coin", "Coin")
                        .WithMany("CoinPriceHistory")
                        .HasForeignKey("CoinId");

                    b.Navigation("Coin");
                });

            modelBuilder.Entity("Entities.TrackCoins.TrackCoin", b =>
                {
                    b.HasOne("Entities.Coins.Coin", "Coin")
                        .WithOne("TrackCoin")
                        .HasForeignKey("Entities.TrackCoins.TrackCoin", "CoinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coin");
                });

            modelBuilder.Entity("Entities.Coins.Coin", b =>
                {
                    b.Navigation("CoinPriceHistory");

                    b.Navigation("TrackCoin");
                });
#pragma warning restore 612, 618
        }
    }
}
